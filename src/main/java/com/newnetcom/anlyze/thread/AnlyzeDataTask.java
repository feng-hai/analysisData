package com.newnetcom.anlyze.thread;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

//import java.util.concurrent.ExecutorService;
//import java.util.concurrent.Executors;
import org.apache.hadoop.hbase.client.Put;
import org.apache.hadoop.hbase.util.Bytes;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.newnetcom.anlyze.anlyze.AnlyzeMain;
import com.newnetcom.anlyze.beans.ProtocolBean;
import com.newnetcom.anlyze.beans.RowKeyBean;
import com.newnetcom.anlyze.beans.publicStaticMap;
import com.newnetcom.anlyze.config.PropertyResource;

//import com.newnetcom.anlyze.config.PropertyResource;
import cn.ngsoc.hbase.HBase;

public class AnlyzeDataTask extends Thread {
	private static final Logger logger = LoggerFactory.getLogger(AnlyzeDataTask.class);
     private int  threadNum=Integer.parseInt( PropertyResource.getInstance().getProperties().get("analyThreadNum"));
	private ExecutorService executor = Executors.newFixedThreadPool(threadNum);
	private Long lastTime = System.currentTimeMillis();
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
	@Override
	public void run() {
		while (true) {
			try {
				ProtocolBean protocol = publicStaticMap.getRawDataQueue().take();
				saveRaw(protocol);
				long temp=System.currentTimeMillis();
				new AnlyzeMain(protocol).run();
				System.out.println("解析一条需要秒数："+(System.currentTimeMillis()-temp));
				//executor.submit(new AnlyzeMain(protocol));
			} catch (InterruptedException e) {
				logger.error("解析错误-", e);
			}
			
			
			// Long lastTime = System.currentTimeMillis();
			// for (int i = 0; i < 1000000; i++) {

			// byte[] content = ByteUtils.hexStr2Bytes(
			// "7E810120000000000002084233303836360201000042B73C07E561DB0100000C006600A5D1F902790001012303110A1D03000D2F51087E"
			
			// "7E070503370152518425120C550044181031000058F502F00000D007C800007D014CFFCAD055555500000000005801A79C01004A1B7D011B022B4CFFC9D0080000000000000058F501F067442C02FF0100005801A79B00C8FF45022B00005801A79D00C8FF4701C000004CFE52632EB0004000FFC0004CFE5262200000A000FFC0004CFE625230000000000000005806A6A801004A4A7D011B022B58FF217B01B81515274C4C1858FF227B000000000000000058FF247B4B0149014A01865558FF257B4843451C7F00000058FF297B00015208520100004CFE52660101FFFFFFFFFFFF53CC16B24C18000000A80000504C19912C020B274C00420E504C1992740EB80BF00A0000504C19935F00AC0DAC0D8101504C1997FF00000000000000504C19981913191319131913504C1A093C003E003B003D00504C1A1839003B003A003B00504C1A1939003B0039003B00504C19A4E80CEB0CEC0CEE0C504C19A5EA0CED0CEC0CF00C504C19A6F00CF30CEB0CED0C504C19A8EF0CEE0CEA0CED0C504C19A9ED0CEA0CED0CEC0C504C19AAE90C000000000000504C19BDED0CEF0CEF0CEF0C504C19BEEE0CED0C0000ED0C504C19BFF10CF10CED0CF30C504C19C0EC0CEF0CEE0CF00C504C19C1F10CEF0CF10C0000504C19D7EA0CEC0CEA0CEF0C504C19D8EE0CEE0CEC0CEE0C504C19D90000EE0CED0CF00C504C19DAF10CEC0CE70CEC0C504C19DBED0CED0CED0CEE0C504C19DCEA0C000000000000504C1A2AED0CEC0CE40CEF0C504C1A2CEC0CEE0CF00CEF0C504C1A2DEE0CED0CED0CEF0C504C1A43E30CED0CEF0CEF0C504C1A44EA0CE60CEA0CED0C504C1A45EF0CF20CEA0CEF0C504C1A460000EF0CEE0CEE0C504C1A48F10CF00CF20CE90C504C1A49EE0C000000000000504C1A5CEA0CF00CEE0CF00C504C1A5DED0CEB0C0000EC0C504C1A5EEF0CF00CEF0CEC0C504C1A5FEF0CEF0CEC0CF00C504C1A60EE0CEE0CEE0C0000504C1A76EF0CF00CF10CF60C504C1A77F20CF30CF00CF10C504C1A780000F00CF30CF30C504C1A79F20CF30CF40CF20C504C1A7AF20CF20CF30CEE0C504C1A7BEF0C000000000000504C1A84F10CED0CEF0CEE0C504C1A85F00CE90CEB0CEE0C504C1A86F10CEE0CEA0C000058FFA97B0000000000000000504C1A083C003E003C003E00087E"
			
			
			// 申沃EN11 6CAAFB8B6F334BA0865197DD7C539A63
			
			// 舒馳808 098E11E36A024692A257DB72306137FF
			//String temp= "7E02000040015295544236194C00000000000C200201E72DC907166BDC002A000000001711101948130104000056FC02020064030200002504000000202A0200002B040004000430011531010ED37E";
			// "7E0705032B0157248733257C0D00431356430000504C19A9380D280D260D1F0D4CFE62523000000040000000504C19AA260D00002D0D380D504C19AB240D220D300D270D504C19AC0000250D220D230D504C19AD2A0D310D170D2C0D504C19AE200D280D170D200D4CFE52636000004000A80000504C19AF260D0000000000004CFE5262200000A000FFC000504C19BD2F0D390D290D300D504C19BE2B0D290D0E0D3A0D504C19BF310D2D0D2A0D290D504C19C00000270D360D2D0D504C19C12A0D2B0D2D0D390D504C19C2300D2A0D260D300D504C19C32C0D00002A0D300D504C19C42A0D2F0D2A0D2A0D504C19C50000390D280D2A0D504C19C62A0D280D240D350D504C19C7250D2B0D250D290D504C19C82C0D000000000000504C19D63A0D310D2B0D350D58FF217B131C16102764F217504C19D7270D390D2E0D290D58FF227B000000000000000058FF247B53014E015001603158FF257B4D484A0D5500000058FF297B000852085201000058FFA97B0000000000000000504C19D8220D2B0D2E0D430D504C19D90000280D270D180D504C19DA2B0D280D310D280D504C19DB2E0D240D240D2D0D504C19DC350D0000120D250D504C19DD2D0D220D2F0D130D504C19DE0000260D1F0D340D504C19DF270D270D280D280D504C19E0120D280D340D210D504C19E1230D000000000000504C1A2A2B0D330D2A0D270D504C1A2B310D230D290D350D504C1A2C2F0D230D2C0D2C0D504C1A2D0000290D300D250D504C1A2E240D180D340D260D504C1A2F2A0D290D270D300D504C1A302B0D00002B0D200D504C1A31240D210D180D220D504C1A320000260D210D2A0D504C1A33280D330D280D260D504C1A34230D240D240D2C0D504C1A35280D000000000000504C19977F00000000000000504C19982D2D2D2D00000000504C1992420EF00A5A0A000053CC16B2F217000000A80000504C19936400AC0DAC0D2C01504C1A084300430042004200504C1A093CC8001063000000504C1A183F003F003E003E00504C1A193CC8001063000000504C19A42B0D270D270D2A0D504C19A5360D290D240D2C0D504C19A6280D2C0D270D2D0D504C19A700002A0D240D280D504C19A82A0D270D310D1B0D504C1991360210276400100E507E"
			// 舒驰3G 27A67D545CFF4AE3AD4DF45AB94A7C18
			//String temp
			// EN11-MK2 2017-11-08 16:26:09 6C6D6C343DA748FF8B34DF9FFD734E48
			
			// 808 200
			// "7E02000040015252462874109200000000000C2002023A99D906B3C0EE00000000000017110823082401040001091702020064030200002504000000202A0200022B04000400043001123101146B7E"
			//);
			// 098E11E36A024692A257DB72306137FF 申沃EN11
			// 6CAAFB8B6F334BA0865197DD7C539A63
			//  AnlyzeMain.getResults(content, ProtocolTypeEnum.P3G,"6CAAFB8B6F334BA0865197DD7C539A63");
			
//			 ProtocolBean protocol =new ProtocolBean();
//			 protocol.setFIBER_UNID("098E11E36A024692A257DB72306137FF");
//			 protocol.setRAW_OCTETS(temp);
//			 protocol.setProto_unid("AF27DA9036174426A2E2F7C19A9A959C");
//			 protocol.setUnid("AF27DA9036174426A2E2F7C19A9A959C");
//			 AnlyzeMain.getResults(protocol);
			 
			 // logger.info(JsonUtils.serialize(rb));
			// try {
			// if(i>100&&i%100==0)
			// {
			// Thread.sleep(1);
			// }
			// } catch (InterruptedException e) {
			// // TODO Auto-generated catch block
			// e.printStackTrace();
			// }

			// }
			// logger.info(String.valueOf(System.currentTimeMillis() - lastTime));
			
		}

		// Long lastTime = System.currentTimeMillis();
		// for (int i = 0; i < 1000000; i++) {

		// byte[] content = ByteUtils.hexStr2Bytes(
		// "7E810120000000000002084233303836360201000042B73C07E561DB0100000C006600A5D1F902790001012303110A1D03000D2F51087E"
		
		// "7E070503370152518425120C550044181031000058F502F00000D007C800007D014CFFCAD055555500000000005801A79C01004A1B7D011B022B4CFFC9D0080000000000000058F501F067442C02FF0100005801A79B00C8FF45022B00005801A79D00C8FF4701C000004CFE52632EB0004000FFC0004CFE5262200000A000FFC0004CFE625230000000000000005806A6A801004A4A7D011B022B58FF217B01B81515274C4C1858FF227B000000000000000058FF247B4B0149014A01865558FF257B4843451C7F00000058FF297B00015208520100004CFE52660101FFFFFFFFFFFF53CC16B24C18000000A80000504C19912C020B274C00420E504C1992740EB80BF00A0000504C19935F00AC0DAC0D8101504C1997FF00000000000000504C19981913191319131913504C1A093C003E003B003D00504C1A1839003B003A003B00504C1A1939003B0039003B00504C19A4E80CEB0CEC0CEE0C504C19A5EA0CED0CEC0CF00C504C19A6F00CF30CEB0CED0C504C19A8EF0CEE0CEA0CED0C504C19A9ED0CEA0CED0CEC0C504C19AAE90C000000000000504C19BDED0CEF0CEF0CEF0C504C19BEEE0CED0C0000ED0C504C19BFF10CF10CED0CF30C504C19C0EC0CEF0CEE0CF00C504C19C1F10CEF0CF10C0000504C19D7EA0CEC0CEA0CEF0C504C19D8EE0CEE0CEC0CEE0C504C19D90000EE0CED0CF00C504C19DAF10CEC0CE70CEC0C504C19DBED0CED0CED0CEE0C504C19DCEA0C000000000000504C1A2AED0CEC0CE40CEF0C504C1A2CEC0CEE0CF00CEF0C504C1A2DEE0CED0CED0CEF0C504C1A43E30CED0CEF0CEF0C504C1A44EA0CE60CEA0CED0C504C1A45EF0CF20CEA0CEF0C504C1A460000EF0CEE0CEE0C504C1A48F10CF00CF20CE90C504C1A49EE0C000000000000504C1A5CEA0CF00CEE0CF00C504C1A5DED0CEB0C0000EC0C504C1A5EEF0CF00CEF0CEC0C504C1A5FEF0CEF0CEC0CF00C504C1A60EE0CEE0CEE0C0000504C1A76EF0CF00CF10CF60C504C1A77F20CF30CF00CF10C504C1A780000F00CF30CF30C504C1A79F20CF30CF40CF20C504C1A7AF20CF20CF30CEE0C504C1A7BEF0C000000000000504C1A84F10CED0CEF0CEE0C504C1A85F00CE90CEB0CEE0C504C1A86F10CEE0CEA0C000058FFA97B0000000000000000504C1A083C003E003C003E00087E"
		
		
		// 申沃EN11 6CAAFB8B6F334BA0865197DD7C539A63
		
		// 舒馳808 098E11E36A024692A257DB72306137FF
		// "7E02000040015295544236194C00000000000C200201E72DC907166BDC002A000000001711101948130104000056FC02020064030200002504000000202A0200002B040004000430011531010ED37E"
		
		// 舒驰3G 27A67D545CFF4AE3AD4DF45AB94A7C18
		
		// EN11-MK2 2017-11-08 16:26:09 6C6D6C343DA748FF8B34DF9FFD734E48
		
		// 808 200
		// "7E02000040015252462874109200000000000C2002023A99D906B3C0EE00000000000017110823082401040001091702020064030200002504000000202A0200022B04000400043001123101146B7E"
		// );
		// 098E11E36A024692A257DB72306137FF 申沃EN11
		// 6CAAFB8B6F334BA0865197DD7C539A63
		// ResultBean rb = AnlyzeMain.getResults(content, ProtocolTypeEnum.P3G,
		// "6CAAFB8B6F334BA0865197DD7C539A63");
		// logger.info(JsonUtils.serialize(rb));
		// try {
		// if(i>100&&i%100==0)
		// {
		// Thread.sleep(1);
		// }
		// } catch (InterruptedException e) {
		// // TODO Auto-generated catch block
		// e.printStackTrace();
		// }

		// }
		// logger.info(String.valueOf(System.currentTimeMillis() - lastTime));

	}
	
	List<Put> puts = new ArrayList<>();
	
	private void saveRaw(ProtocolBean protocol) {
		try {
		long time=	Long.parseLong(protocol.getTIMESTAMP());
			Put put = new Put(RowKeyBean.makeRowKey(protocol.getUnid(), time));
			put.addColumn(Bytes.toBytes("CUBE"), Bytes.toBytes("DATIME_RX"), Bytes.toBytes(sdf.format(new Date(time))));
			put.addColumn(Bytes.toBytes("CUBE"), Bytes.toBytes("RAW_OCTETS"), Bytes.toBytes(protocol.getRAW_OCTETS().toUpperCase()));
			puts.add(put);
			Long curentTime = System.currentTimeMillis();
			if (puts.size() > 5000 || curentTime - lastTime > 60000) {
				lastTime = curentTime;
				//long temp = System.currentTimeMillis();
				if (puts.size() > 0) {
					List<Put> tempPuts = new ArrayList<>();
					tempPuts.addAll(puts);
					HBase.put("CUBE_RAW", tempPuts, false);
					puts.clear();
					Thread.sleep(5);
					//System.out.println(tempPuts.size() + "车辆原始数据" + (System.currentTimeMillis() - temp));
				}
			}
		} catch (Exception e) {
			logger.error("插入hbase数据库有问题", e);
		}

	}
}
