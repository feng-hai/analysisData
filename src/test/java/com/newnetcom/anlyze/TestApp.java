package com.newnetcom.anlyze;

import java.util.Date;
import java.util.Timer;

//import org.slf4j.Logger;
//import org.slf4j.LoggerFactory;
import com.newnetcom.anlyze.thread.UpdateHbaseMyTask;
import com.newnetcom.anlyze.thread.UpdateRedisTask;
import com.newnetcom.anlyze.utils.ByteUtils;
import com.newnetcom.anlyze.anlyze.AnlyzeCans;
import com.newnetcom.anlyze.anlyze.AnlyzeMain;
import com.newnetcom.anlyze.beans.ProtocolBean;
import com.newnetcom.anlyze.thread.AnlyzeDataTask;
import com.newnetcom.anlyze.thread.CheckCatchTask;
import com.newnetcom.anlyze.thread.DataToKafKaTask;
import com.newnetcom.anlyze.thread.RawDataMyTaskRun;



public class TestApp {
	//private static final Logger logger = LoggerFactory.getLogger(TestApp.class);

	public static void main(String[] args) {
		//ByteUtils.toEscape(ByteUtils.hexStr2Bytes("7E00000000E802C001FE4342313039363902010000262D000028F03B07B2B43C0228002D004D01110B0E022F3400C01C00007B21FF18007E"));
		// logger.error("tet");
		// TODO Auto-generated method stub
//		UpdateHbaseMyTask sendData = new UpdateHbaseMyTask();
//		sendData.setDaemon(true);
//		sendData.start();
//		AnlyzeDataTask sendData1 = new AnlyzeDataTask();
//		sendData1.setDaemon(true);
//		sendData1.start();     
//		UpdateRedisTask sendDataRedis = new UpdateRedisTask();
//		sendDataRedis.setDaemon(true);
//		sendDataRedis.start(); 
//		
//		RawDataMyTaskRun sendData2 = new RawDataMyTaskRun();
//		sendData2.setDaemon(true);
//		sendData2.start();
//		
//		DataToKafKaTask sendDataTask = new DataToKafKaTask();
//		sendDataTask.setDaemon(true);
//		sendDataTask.start();
//
//		Timer timer = new Timer();
//		timer.schedule(new CheckCatchTask(), new Date(), 10000);
		ProtocolBean protocol=new ProtocolBean ();
		
		 protocol.setFIBER_UNID("27A67D545CFF4AE3AD4DF45AB94A7C18");
		 protocol.setRAW_OCTETS("7e00000000e802ed01920b42313135373202010000ae070000e1a8bd06fe555f020000fb030000110b1105362f00c01f00007b21ff1800011714102734b21600007b22ff1800000000000000000000007b24ff18004801460147015a6a00007b25ff1800474245620300000000007b29ff1800000852085201000000007ba9ff180000000000000000000000b216cc1300b2160000009d0000000091194c1000020210273400de0d000092194c1000420eb80b280a0000000093194c10005f00c409c409f000000097194c1000ff00000000000000000098194c10001a1a131313131a1a0000a4194c1000c80cc60cce0cc80c0000bd194c1000c30cc70cc80cc70c0000d6194c1000c90ccb0ccc0cc80c00002a1a4c1000cd0cca0ccb0ccc0c00005c1a4c1000cd0cd00cce0cd10c0000751a4c1000c90ccc0cc90c00000000821a4c1000cd0ccb0ccc0ccd0c0000081a4c10003b003b003c003b000000181a4c100038003800390039000000d0c9ff0c0000090000000000000000d0caff0c005555aa55000000000000d041f00c0010000000000000000000f001f518004b430602000900000000f002f518000000d007c800000000009da701180000cd002f01fa000000009ba701180000cb002e01fc000000009ca7011800010028827d011b01fb00001770fb1800000000004a45003800001771fb180000040060009c4905400e7e");
		// protocol.set
		 protocol.setProto_unid("CD039E17A8E84137AF6DE1CDC172C274");
		 protocol.setUnid("276D8F32B73946BFA2D3CBEAC0C65EC0");
		new AnlyzeMain(protocol).run();
		
   
	}
}
