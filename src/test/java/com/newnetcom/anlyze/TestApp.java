package com.newnetcom.anlyze;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;
//import java.util.Timer;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

//import org.slf4j.Logger;
//import org.slf4j.LoggerFactory;
//import com.newnetcom.anlyze.thread.UpdateHbaseMyTask;
//import com.newnetcom.anlyze.thread.UpdateRedisTask;
//import com.newnetcom.anlyze.utils.ByteUtils;
//import com.newnetcom.anlyze.anlyze.AnlyzeCans;
import com.newnetcom.anlyze.anlyze.AnlyzeMain;
import com.newnetcom.anlyze.anlyze.db.factory.DatabaseFactory;
import com.newnetcom.anlyze.beans.ProtocolBean;
import com.newnetcom.anlyze.beans.VehicleIndex;
import com.newnetcom.anlyze.config.PropertyResource;

import cn.ngsoc.hbase.util.pages.Esutil;
//import com.newnetcom.anlyze.thread.AnlyzeDataTask;
//import com.newnetcom.anlyze.thread.CheckCatchTask;
//import com.newnetcom.anlyze.thread.DataToKafKaTask;
//import com.newnetcom.anlyze.thread.MyTask;
//import com.newnetcom.anlyze.thread.RawDataMyTaskRun;

public class TestApp {
	// private static final Logger logger =
	// LoggerFactory.getLogger(TestApp.class);

	public static void main(String[] args) {
		//测试玉柴解析
		//testYuchai();
		testGB("232302FE4C48574347383544334631353335363633010225120B0910002B010103010000001A68B51A5627425E0100085F0000020101045D4E204E206C1A7C271A050006BBBECB015B88840601420FB401C8FFFF010D4F010148070000000000000000000801011A56274203200001C80FAA0F8C0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FA00FAA0FA00FB40FAA0F960FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FA00FAA0FAA0FA00FAA0FA00FAA0FAA0FAA0FAA0FA00FAA0FAA0FAA0FA00FAA0FAA0FAA0FA00FAA0FAA0FAA0FAA0FAA0FA00FB40FB40FB40FB40FB40FB40FAA0FB40FAA0FB40FAA0FAA0FAA0FA00FA00FB40FAA0FAA0FB40FAA0FB40FA00FB40F960FA00F8C0FAA0FAA0FAA0FAA0FB40FB40FB40FB40FA00FB40FA00FB40FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FA00FA00FAA0FA00FA00FA00FAA0FAA0F960FAA0F960FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0901010038484848484848494949494E4E4F4F4D4D4D4D4D4E4E4E4E4D4D4C4C4D494848484948494949494D4D4D4D4E4E4E4E4D4C4C4D4C4D4D4C4C4D66");
		testGB("232302FE4C485743473835443346313533353636330101B1120B0910002B0601420FB4012E0F780100FF0100FF0801011A562742032000C9C80FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0F780FAA0FAA0FAA0FAA0FAA0FAA0FA00FAA0FA00FAA0FA00F8C0F960F8C0FAA0FA00FA00FAA0FA00FA00FA00FAA0FA00FA00FAA0FA00FAA0FA00FAA0FAA0FAA0FAA0FA00FAA0FAA0F8C0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FA00FAA0FAA0FAA0FAA0FAA0FAA0FA00FAA0FAA0FAA0FAA0FAA0FA00FA00FA00F960FAA0FAA0FA00FAA0FAA0FAA0FAA0FAA0FAA0FA00FAA0FAA0FAA0FA00FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FAA0FA00FA00FAA0FAA0FAAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF67");
		testGB("232302FE4C485743473835443346313533353636330101B1120B0910002B0601420FB4012E0F780100FF0100FF0801011A56274203200191C8FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0");
		testGB("232302FE4C485743473835443346313533353636330101B1120B0910002B0601420FB4012E0F780100FF0100FF0801011A56274203200259C8FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0B");
		// ByteUtils.toEscape(ByteUtils.hexStr2Bytes("7E00000000E802C001FE4342313039363902010000262D000028F03B07B2B43C0228002D004D01110B0E022F3400C01C00007B21FF18007E"));
		// logger.error("tet");
		// TODO Auto-generated method stub
		// UpdateHbaseMyTask sendData = new UpdateHbaseMyTask();
		// sendData.setDaemon(true);
		// sendData.start();
		// AnlyzeDataTask sendData1 = new AnlyzeDataTask();
		// sendData1.setDaemon(true);
		// sendData1.start();
		// UpdateRedisTask sendDataRedis = new UpdateRedisTask();
		// sendDataRedis.setDaemon(true);
		// sendDataRedis.start();
		//
		// RawDataMyTaskRun sendData2 = new RawDataMyTaskRun();
		// sendData2.setDaemon(true);
		// sendData2.start();
		//
		// DataToKafKaTask sendDataTask = new DataToKafKaTask();
		// sendDataTask.setDaemon(true);
		// sendDataTask.start();
		//
		// // Timer timer = new Timer();
		Map<String, String> config = PropertyResource.getInstance().getProperties();
		DatabaseFactory.getDB(Integer.parseInt(config.get("databaseType")), "A2L");// 1获取配置文件的分析类
		DatabaseFactory.getDB(Integer.parseInt(config.get("databaseType")), "CAN");
		long temp = System.currentTimeMillis();
		ExecutorService executor = Executors.newFixedThreadPool(10);
		// // timer.schedule(new CheckCatchTask(), new Date(), 10000);
		for (int t = 0; t < 1; t++) {
			//
			ProtocolBean protocol = new ProtocolBean();
			protocol.setFIBER_UNID("E95B2CC4448F48349817DFB38773DDA3");
			// 2D251C985C1F4838A4F737D8490875C9//EV61
			// EDE273FE4EB343EFB19C3C083C938455
			// 098E11E36A024692A257DB72306137FF
			// E95B2CC4448F48349817DFB38773DDA3 //申沃FN11

			// E512F8A846394DDD8E2A4EAB39A32A4F//申沃HN12
			protocol.setRAW_OCTETS(
					
					
					// 上汽
					// "7E00000000E8027600F10042333133353402010000F0000000F13F3C07A232DA010000F6FF420012020709102D00C00600001E9FFF1800DC9600D4F7007D01FD0000273FFF0C0011007D01000028FD000000D0280A0C000008000000007D01000000EF30200C00F0000000000000000000EF6C401800020000000000000000000528FE1800F13F3C07A232DA0132AD067E"
					// "7E8101200000000000E91443363130393902020000BE203B0784EBD401000019000000C800A4F20D000200272F1203050A0B0F3EAA0C7E"
					
					// ev61
					
					// FN11
					
					"7E00000000E802B1014D01544632333435020100004C0100006D373C07AB2FDA01000018005E0012091402322D21C01B0000F316FF180005323A50865204FF0000F313FF1800DC05DC057800FFFF0000F311FF1800B4B3F664481AD28C0000F315FF1800644848221001FFFF0000F300151C0010B4B4B4B3B3B3B30000F300161C0001484848484848480000A5EFCB180094E33C0000A0C4120000A5EFC2180041020500500B00000000A5EFC8180002009403CE0300000000A5EFCA1800EE02070105B700020000A5EFC11800011A42B0047C060000000901FF0C004850F00A9708F00000000902FF0C002E0F8813983A401F00000903FF0C00E903E114000F00000000EF2814180038C45D311400004C0000EF20F5180044000100070400500000EF281518007D01100001000100000000EF1AFF18002100000000000000000028EF0A180005C300C9070000000000EA04FF180004040001000000000000EE6CFE0C0000000000000000000000EA00FF18000189000A80627D01510000EA01FF180004007D014C51007D01500000EA02FF180004007D015000007D01410000EA03FF1800058882687D02627D014C0000A700FF180000000000000000000000A701FF18004C00004D4B0050484CAE1E7E"
			// HN12
			

			);
			protocol.setProto_unid("CD039E17A8E84137AF6DE1CDC172C274");
			// AF27DA9036174426A2E2F7C19A9A959C //808
			// CD039E17A8E84137AF6DE1CDC172C274 //3G

			protocol.setUnid("CD039E17A8E84137AF6DE1CDC172C274");// 276D8F32B73946BFA2D3CBEAC0C65EC0
			protocol.setTIMESTAMP(String.valueOf(new Date().getTime()));

			// executor.
		//	new AnlyzeMain(protocol).run();

			// executor.execute(new AnlyzeMain(protocol));
		}
		System.out.println(System.currentTimeMillis() - temp);

		// List<VehicleIndex> vehicleIndexs=new ArrayList<>();
		// VehicleIndex temp=new VehicleIndex("ee",String.valueOf(new
		// Date().getTime()));
		// vehicleIndexs.add(temp);
		// Esutil.addIndex("tst", "type", vehicleIndexs);

	}

	/**
	 * @Title: testYuchai @Description: TODO(测试玉柴解析数据) @param 设定文件 @return void
	 *         返回类型 @throws
	 */
	private static void testYuchai() {
		ProtocolBean protocol = new ProtocolBean();
		protocol.setFIBER_UNID("96E4D4C9FACB47FFBDEE0129C74FBA65");
		protocol.setRAW_OCTETS(
				"7BA0000001001680120B050D14011F3B03ECEC762F03BAC4005034003C98090000687D");
		protocol.setProto_unid("B443F9C7E040405488364860E9AFF945");
		protocol.setUnid("B443F9C7E040405488364860E9AFF945");// 276D8F32B73946BFA2D3CBEAC0C65EC0
		protocol.setTIMESTAMP(String.valueOf(new Date().getTime()));
		// executor.
		new AnlyzeMain(protocol).run();
	}
	
	private static void testGB(String raw){
		ProtocolBean protocol = new ProtocolBean();
		protocol.setFIBER_UNID("96E4D4C9FACB47FFBDEE0129C74FBA65");
		protocol.setRAW_OCTETS(raw);
		protocol.setProto_unid("EF039E17A8E84137AF6DE1CDC172C274");
		protocol.setUnid("B443F9C7E040405488364860E9AFF945");// 276D8F32B73946BFA2D3CBEAC0C65EC0
		protocol.setTIMESTAMP(String.valueOf(new Date().getTime()));
		// executor.
		new AnlyzeMain(protocol).run();
		
	
	}
}
